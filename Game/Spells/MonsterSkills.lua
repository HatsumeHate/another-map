---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MSI.
--- DateTime: 06.09.2021 0:56
---
do


    function RevenantLaserMissile(caster, missile)
        local timer = CreateTimer()
        local group = CreateGroup()
        local second_group = CreateGroup()
        local hit_group = CreateGroup()
        local radius = 50.
        local half_radius = radius / 3.
        local range_steps = math.ceil(300. / half_radius) + 1
        local starting_angle = missile.heading_angle + 90.

            TimerStart(timer, 0.025, true, function()
                if missile.time > 0. then
                    local step_x = missile.current_x - Rx(150., starting_angle); local step_y = missile.current_y - Ry(150., starting_angle)

                    for i = 1, range_steps do
                        GroupEnumUnitsInRange(group, step_x, step_y, radius, nil)
                        for index = BlzGroupGetSize(group) - 1, 0, -1 do
                            GroupAddUnit(second_group, BlzGroupUnitAt(group, index))
                        end
                        step_x = step_x + Rx(half_radius, starting_angle)
                        step_y = step_y + Ry(half_radius, starting_angle)
                    end

                    for index = BlzGroupGetSize(second_group) - 1, 0, -1 do
                        local picked = BlzGroupUnitAt(second_group, index)
                        if IsUnitEnemy(picked, MONSTER_PLAYER) and GetUnitState(picked, UNIT_STATE_LIFE) > 0.045 and GetUnitAbilityLevel(picked, FourCC("Avul")) == 0 and not IsUnitInGroup(picked, hit_group) then
                            ApplyEffect(caster, picked, 0.,0., "revenant_lightning_effect", Current_Wave)
                            GroupAddUnit(hit_group, picked)
                            DelayAction(0.2, function() if hit_group then GroupRemoveUnit(hit_group, picked) end end)
                        end
                    end

                    GroupClear(second_group)

                else
                    DestroyGroup(group)
                    DestroyGroup(hit_group)
                    DestroyGroup(second_group)
                    DestroyTimer(timer)
                end
            end)

    end



    function CastReanimate(caster)
        local angle = GetRandomReal(0., 359.)
        local max_range = GetMaxAvailableDistance(GetUnitX(caster), GetUnitY(caster), angle, GetRandomReal(200., 500.))
        local point_x = GetUnitX(caster) + Rx(max_range, angle)
        local point_y = GetUnitY(caster) + Ry(max_range, angle)

            DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Undead\\RaiseSkeletonWarrior\\RaiseSkeleton.mdx", point_x, point_y))
            local reanimated = CreateUnit(SECOND_MONSTER_PLAYER, FourCC("u00G"), point_x, point_y, angle)
            SetUnitAnimation(reanimated, "birth")
            SafePauseUnit(reanimated, true)
            UnitAddAbility(reanimated, FourCC("Avul"))
            DelayAction(2.333, function()
                UnitApplyTimedLife(reanimated, 0, 16.)
                SafePauseUnit(reanimated, false)
                UnitRemoveAbility(reanimated, FourCC("Avul"))
                --CreateBarOnUnit(reanimated)
            end)

    end


    function CreateVoidRain(caster, x, y, radius, duration)
        local timer = CreateTimer()

            TimerStart(timer, 0.23, true, function()
                if duration < 0 then
                    DestroyTimer(timer)
                else
                    duration = duration - 0.23
                    local impact_angle = GetRandomReal(0., 359.)
                    local impact_offset = GetRandomReal(0., radius / 2.)
                    local impact_x, impact_y = x + Rx(impact_offset, impact_angle), y + Ry(impact_offset, impact_angle)
                    local missile = ThrowMissile(caster, nil, "void_rain_missile", nil, impact_x + 100., impact_y - 100., impact_x, impact_y, 0.)
                    BlzSetSpecialEffectPitch(missile.my_missile, (AngleBetweenXY_DEG(200., 800., 0., 0.) - 180.) * bj_DEGTORAD)
                end
            end)

    end


    function CreateFireRain(caster, x, y, radius, duration)
        local timer = CreateTimer()

        local sound = CreateNew3DSound("Abilities\\Spells\\Demon\\RainOfFire\\RainOfFireLoop1.wav", x, y, 35., 100, 1500., 4000.)
        StartSound(sound)

            TimerStart(timer, 0.18, true, function()
                if duration < 0 then
                    StopSound(sound, true, false)
                    DestroyTimer(timer)
                else
                    duration = duration - 0.18
                    local impact_angle = GetRandomReal(0., 359.)
                    local impact_offset = GetRandomReal(0., radius / 2.)
                    local impact_x, impact_y = x + Rx(impact_offset, impact_angle), y + Ry(impact_offset, impact_angle)
                    ApplyEffect(caster, nil, impact_x, impact_y, "fire_rain_effect", 1)
                    --local missile = ThrowMissile(caster, nil, "fire_rain_missile", nil, impact_x + 125., impact_y - 125., impact_x, impact_y, 0.)
                    --BlzSetSpecialEffectPitch(missile.my_missile, (AngleBetweenXY_DEG(125., 800., 0., 0.) - 180.) * bj_DEGTORAD)
                end
            end)

    end


    function CastVoidDisc(caster, x, y)
        local sfx = AddSpecialEffect("Effect\\Void Disc.mdx", x, y)
        local timer = CreateTimer()
        local duration = 4.

            TimerStart(timer, 0.33, true, function()
                if duration < 0. then
                    DestroyTimer(timer)
                    DestroyEffect(sfx)
                else
                    duration = duration - 0.33
                    ApplyEffect(caster, nil, x, y, "EVDS", Current_Wave)
                end
            end)

    end


    function SatyrBlinkCast(unit)
        local angle = GetRandomReal(0., 359.)
        local distance = GetMaxAvailableDistance(GetUnitX(unit), GetUnitY(unit), angle, GetRandomReal(300., 700.))
        local sfx = AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdx", GetUnitX(unit), GetUnitY(unit))
        local x = GetUnitX(unit) + Rx(distance, angle)
        local y = GetUnitY(unit) + Ry(distance, angle)

        DestroyEffect(sfx)

            DelayAction(0.2, function()
                if GetUnitState(unit, UNIT_STATE_LIFE) > 0.045 then
                    SetUnitPosition(unit, x, y)
                    local point_sfx = AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdx", GetUnitX(unit), GetUnitY(unit))
                    DestroyEffect(point_sfx)
                end
            end)


    end


    function IceBlastCast(unit, point_x, point_y)
        local circle = AddSpecialEffect("Effect\\Spell Marker Blue.mdx", point_x, point_y)

            BlzSetSpecialEffectTimeScale(circle, 1.3)
            BlzSetSpecialEffectScale(circle, 1.14)

            DelayAction(0.65, function()
                DestroyEffect(circle)
                local effects = {}
                local effect_amount = GetRandomInt(15, 18)

                for i = 1, effect_amount do
                    local index = i
                    DelayAction(GetRandomReal(0.01, 0.12), function()
                        effects[index] = AddSpecialEffect("Effect\\Ice Shard.mdx", point_x + GetRandomReal(-112.5, 112.5), point_y + GetRandomReal(-112.5, 112.5))
                        BlzSetSpecialEffectYaw(effects[index], math.rad(GetRandomReal(0., 360.)))
                        BlzSetSpecialEffectPitch(effects[index], math.rad(GetRandomReal(0., 30.)))
                        BlzSetSpecialEffectTimeScale(effects[index], 1.7)
                        BlzSetSpecialEffectScale(effects[index], 0.7 + GetRandomReal(-0.12, 0.12))
                    end)
                end

                DelayAction(0.3, function()

                    ApplyEffect(unit, nil, point_x, point_y, "ice_blast_effect", 1)
                    DelayAction(0.2, function() for i = 1, effect_amount do DestroyEffect(effects[i]) end end)

                end)

            end)


    end



    ---@param model string
    ---@param point_x real
    ---@param point_y real
    ---@param scale real
    ---@param timescale real
    ---@param duration real
    ---@param feedback function
    function CreateSpellCircle(model, point_x, point_y, scale, timescale, duration, feedback)
        local circle = AddSpecialEffect(model, point_x, point_y)

            BlzSetSpecialEffectTimeScale(circle, timescale)
            BlzSetSpecialEffectScale(circle, scale)

            DelayAction(duration, function()
                DestroyEffect(circle)
                if feedback then feedback() end
            end)
    end


    function DemonAssassinBlinkCast(source, target)
        local angle = AngleBetweenUnits(source, target)
        local x,y = GetUnitX(target), GetUnitY(target)
        local range = GetMaxAvailableDistance(x, y, angle, 125.)

            x = x + Rx(range, angle)
            y = y + Ry(range, angle)
            SetUnitX(source, x)
            SetUnitY(source, y)

            DestroyEffect(AddSpecialEffect("Effect\\Blink Red Target.mdx", x, y))
            BlzSetUnitFacingEx(source, angle + 180.)

    end


    ---@param source unit
    ---@param id string
    ---@param faderate real
    ---@param bonus_start_z real
    ---@param bonus_end_z real
    ---@param bonus_range real
    ---@param bonus_angle real
    function LightningEffect_Point(source, point_x,  point_y, id, faderate, bonus_start_z, bonus_end_z, bonus_range, bonus_angle)
        local source_x = GetUnitX(source); local source_y = GetUnitY(source); local source_z = GetUnitZ(source) + bonus_start_z
        local unit_data = GetUnitData(source)
        if unit_data.exploded then
            source_x = unit_data.death_x; source_y = unit_data.death_y; source_z = unit_data.death_z + bonus_start_z
        end

        if bonus_range then
            bonus_angle = GetUnitFacing(source) + bonus_angle
            source_x = source_x + (bonus_range * Cos(bonus_angle * bj_DEGTORAD))
            source_y = source_y + (bonus_range * Sin(bonus_angle * bj_DEGTORAD))
        end

        local point_z = GetZ(point_x,  point_y) + bonus_end_z

        local bolt = AddLightningEx(id, true, source_x, source_y, source_z, point_x, point_y, point_z)
        local fade_time = faderate

            local timer = CreateTimer()
            TimerStart(timer, 0.025, true, function()
                if faderate <= 0. then
                    DestroyLightning(bolt)
                    DestroyTimer(GetExpiredTimer())
                else
                    SetLightningColor(bolt, 1, 1, 1, faderate / fade_time)

                    unit_data = GetUnitData(source)
                    if unit_data.exploded then source_x = unit_data.death_x; source_y = unit_data.death_y; source_z = unit_data.death_z + bonus_start_z
                    else source_x = GetUnitX(source); source_y = GetUnitY(source); source_z = GetUnitZ(source) + bonus_start_z end

                    MoveLightningEx(bolt, true, source_x, source_y, source_z, point_x,  point_y, point_z)
                    faderate = faderate - 0.025
                end
            end)

    end


    function Lightningeffect_Nova(source, id, radius, parts, bonus_start_z, faderate)
        local pack = {}
        local starting_angle = GetRandomReal(0., 360.)
        local step = 360. / parts
        local x,y = GetUnitX(source), GetUnitY(source)
        local z = GetZ(x, y) + bonus_start_z

            for i = 1, parts do
                local next = starting_angle + step
                pack[i] = AddLightningEx(id, true, x + Rx(radius, starting_angle), y + Ry(radius, starting_angle), z, x + Rx(radius, next), y + Ry(radius, next), z)
                starting_angle = next
            end

            local fade_time = faderate

            local timer = CreateTimer()
            TimerStart(timer, 0.025, true, function()
                if faderate <= 0. then
                    for i = 1, parts do DestroyLightning(pack[i]) end
                    DestroyTimer(timer)
                else
                    for i = 1, parts do SetLightningColor(pack[i], 1, 1, 1, faderate / fade_time) end
                    faderate = faderate - 0.025
                end
            end)

    end


    function PhantomLightningNova(caster)
        local point_x, point_y = GetUnitX(caster), GetUnitY(caster)
        local duration = 1.
        local timer = CreateTimer()

            Lightningeffect_Nova(caster, "WHNL", 350., 18, 5, 1.25)
            TimerStart(timer, 0.05, true, function()
                if duration <= 0. then
                    DestroyTimer(timer)
                else
                    local angle = GetRandomReal(0., 360.)
                    local range = GetRandomReal(75., 350.)
                    local x,y = point_x + Rx(range, angle), point_y + Ry(range, angle)
                    LightningEffect_Point(caster, x,  y, "WHNL", 0.33, 85, 5., 0., 0.)
                    AddSoundVolume("Sounds\\Spells\\lightning_zap".. GetRandomInt(1,4) ..".wav", x, y, 114, 1500, 4000.)
                    ApplyEffect(caster, nil, point_x, point_y, "phantom_nova_effect", 1)
                    duration = duration - 0.05
                end
            end)

    end

    function ZombieVomitCast(source, x, y)
        local timer = CreateTimer()
        local sfx = AddSpecialEffect("Effect\\ToxicGas.mdx", GetUnitX(source), GetUnitY(source))
        local duration = 0.4

            BlzSetSpecialEffectYaw(sfx, AngleBetweenUnitXY(source, x, y) * bj_DEGTORAD)
            BlzSetSpecialEffectZ(sfx, GetZ(GetUnitX(source), GetUnitY(source)) + 80.)
            BlzSetSpecialEffectPitch(sfx, -45. * bj_DEGTORAD)

            TimerStart(timer, 0.1, true, function()
                if GetWidgetLife(source) <= 0.045 or IsUnitDisabled(source) or duration <= 0. then
                    DestroyTimer(timer)
                    DestroyEffect(sfx)
                else
                    duration = duration - 0.1
                    ApplyEffect(source, nil, x, y, "zombie_vomit_effect", 1)
                end
            end)


    end



end