---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MSI.
--- DateTime: 11.03.2022 16:30
---
do

    local RavenRects
    local RavenGroup
    local RAVEN_STATE_FLYING = 1
    local RAVEN_STATE_SITTING = 2
    local RAVEN_STATE_LANDING = 3
    local RavenState



    function RavenEnumerate()
        local raven = GetEnumUnit()


            if GetRandomInt(1, 15) == 1 then SetUnitMoveSpeed(raven, GetRandomInt(150, 170)) end
            if GetRandomInt(1, 19) == 1 then AddSoundVolume("Ambient\\caw_".. GetRandomInt(1, 6) ..".wav", GetUnitX(raven), GetUnitY(raven), 100, 1400.) end


            if RavenState[raven] == RAVEN_STATE_FLYING then

                if GetRandomInt(1, 25) == 1 then

                    local trigger = CreateTrigger()
                    local rect = RavenRects[GetRandomInt(1, #RavenRects)]
                    local region = CreateRegion()

                        RavenState[raven] = RAVEN_STATE_LANDING
                        RegionAddRect(region, rect)
                        IssuePointOrderById(raven, order_move, GetRectCenterX(rect), GetRectCenterY(rect))
                        TriggerRegisterEnterRegion(trigger, region, nil)
                        TriggerAddAction(trigger, function()
                            if GetTriggerUnit() == raven then
                                IssueImmediateOrderById(raven, order_stop)
                                SetUnitFlyHeight(raven, 0., 0.)
                                SetUnitAnimationByIndex(raven, 7)
                                DelayAction(3., function()
                                    AddUnitAnimationProperties(raven, "alternate", true)
                                    AddUnitAnimationProperties(raven, "gold", false)
                                    --print("landing done")
                                end)
                                DestroyTrigger(trigger)
                                RemoveRegion(region)
                                RavenState[raven] = RAVEN_STATE_SITTING
                                --print("landing")
                            end
                        end)

                elseif GetRandomInt(1, 19) == 1 then
                    IssuePointOrderById(raven, order_move, GetRandomReal(GetRectMinX(bj_mapInitialPlayableArea), GetRectMaxX(bj_mapInitialPlayableArea)), GetRandomReal(GetRectMinY(bj_mapInitialPlayableArea), GetRectMaxY(bj_mapInitialPlayableArea)))
                end

            elseif RavenState[raven] == RAVEN_STATE_SITTING then

                if GetRandomInt(1, 11) == 1 then
                    RavenState[raven] = RAVEN_STATE_FLYING
                    SetUnitAnimationByIndex(raven, 8)
                    --print("take off")
                    DelayAction(2.11, function()
                        SetUnitFlyHeight(raven, 330., 0.)
                        AddUnitAnimationProperties(raven, "alternate", false)
                        AddUnitAnimationProperties(raven, "gold", true)
                        IssuePointOrderById(raven, order_move, GetRandomReal(GetRectMinX(bj_mapInitialPlayableArea), GetRectMaxX(bj_mapInitialPlayableArea)), GetRandomReal(GetRectMinY(bj_mapInitialPlayableArea), GetRectMaxY(bj_mapInitialPlayableArea)))
                        --print("take off done")
                    end)
                end

            end


    end



    function CreateRaven()
        local rect = RavenRects[GetRandomInt(1, #RavenRects)]
        local raven = CreateUnit(Player(9), FourCC("crvn"), GetRectCenterX(rect), GetRectCenterY(rect), GetRandomReal(0., 360.))

            AddUnitAnimationProperties(raven, "gold", true)
            GroupAddUnit(RavenGroup, raven)
            SetUnitFlyHeight(raven, 330., 0.)
            RemoveGuardPosition(raven)
            RavenState[raven] = RAVEN_STATE_FLYING
            IssuePointOrderById(raven, order_move, GetRandomReal(GetRectMinX(bj_mapInitialPlayableArea), GetRectMaxX(bj_mapInitialPlayableArea)), GetRandomReal(GetRectMinY(bj_mapInitialPlayableArea), GetRectMaxY(bj_mapInitialPlayableArea)))

    end



    function InitRavens()

        RavenRects = {
            gg_rct_raven_rest_1,
            gg_rct_raven_rest_2,
            gg_rct_raven_rest_3,
            gg_rct_raven_rest_4,
            gg_rct_raven_rest_5,
            gg_rct_raven_rest_6,
            gg_rct_raven_rest_7,
            gg_rct_raven_rest_8,
            gg_rct_raven_rest_9,
            gg_rct_raven_rest_10,
            gg_rct_raven_rest_11,
            gg_rct_raven_rest_12,
            gg_rct_raven_rest_13,
            gg_rct_raven_rest_14,
            gg_rct_raven_rest_15,
            gg_rct_raven_rest_16,
            gg_rct_raven_rest_17,
            gg_rct_raven_rest_18,
            gg_rct_raven_rest_19,
            gg_rct_raven_rest_20,
            gg_rct_raven_rest_21,
            gg_rct_raven_rest_22,
            gg_rct_raven_rest_23,
            gg_rct_raven_rest_24,
            gg_rct_raven_rest_25,
            gg_rct_raven_rest_26,
            gg_rct_raven_rest_27,
            gg_rct_raven_rest_28,
            gg_rct_raven_rest_29,
            gg_rct_raven_rest_30,
            gg_rct_raven_rest_31,
            gg_rct_raven_rest_32,
            gg_rct_raven_rest_33,
            gg_rct_raven_rest_34,
            gg_rct_raven_rest_35,
            gg_rct_raven_rest_36,
            gg_rct_raven_rest_37,
            gg_rct_raven_rest_38,
            gg_rct_raven_rest_39,
        }

        RavenState = {}
        RavenGroup = CreateGroup()


        TimerStart(CreateTimer(), 3., true, function()
            ForGroup(RavenGroup, RavenEnumerate)
        end)


        for i = 1, GetRandomInt(5, 9) do
            CreateRaven()
        end

    end

end