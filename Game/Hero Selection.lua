---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Stasik.
--- DateTime: 15.01.2020 16:52
---
do

    local MAX_RANGE_XP_LOSS = 1700.
    local MIN_XP_LOSS_RATE = 0.35
    local DeathTrigger = 0
    local LvlupTrigger = 0
    local HeroDeathSoundpack = 0
    local HeroProperNames
    local HeroXPLevelFactor = 125.
    local HeroXPPrevLevelFactor = 1.14
    local HeroXPConstantFactor = 150.
    local CemetaryX
    local CemetaryY
    PlayerRequiredEXP = nil
    PlayerLastRequiredEXP = nil



    function IsAHero(unit)
        for i = 1, 6 do if PlayerHero[i] and PlayerHero[i] == unit then return true end end
        return false
    end


     function IsAnyHeroInRange(x, y, range)
        for i = 1, 6 do if PlayerHero[i] and IsUnitInRangeXY(PlayerHero[i], x, y, range) and GetUnitState(PlayerHero[i], UNIT_STATE_LIFE) > 0.045 then return true end end
        return false
    end


    function GetLevelXP(level)
        local xp = 200 -- level 1
        local i = 1

            for i = 2, level do
                xp = ((xp*HeroXPPrevLevelFactor) + (i+1) * HeroXPLevelFactor) + HeroXPConstantFactor
            end

        return xp
    end

    ---@param amount integer
    ---@param x real
    ---@param y real
    function GiveExpForKill(amount, x, y)
        for i = 1, 6 do
            if PlayerHero[i] and GetUnitState(PlayerHero[i], UNIT_STATE_LIFE) > 0.045 then
                local xp_rate = 1.
                local distance = DistanceBetweenUnitXY(PlayerHero[i], x, y)

                    if distance > MAX_RANGE_XP_LOSS then
                        xp_rate = MAX_RANGE_XP_LOSS / distance
                    end

                if xp_rate < MIN_XP_LOSS_RATE then xp_rate = MIN_XP_LOSS_RATE end
                SuspendHeroXP(PlayerHero[i], false)
                AddHeroXP(PlayerHero[i], math.ceil(amount * xp_rate), false)
                SuspendHeroXP(PlayerHero[i], true)
            end
        end
    end


    ---@param amount integer
    ---@return integer
    function GiveExp(amount)
        amount = amount + (Current_Wave * 5)
        for i = 1, 6 do
            if PlayerHero[i] then
                SuspendHeroXP(PlayerHero[i], false)
                AddHeroXP(PlayerHero[i], amount * (1. + GetUnitParameterValue(PlayerHero[i], EXP_BONUS) * 0.01), false)
                SuspendHeroXP(PlayerHero[i], true)
            end
        end
        return amount
    end

    ---@param amount integer
    ---@return integer
    function GiveGold(amount)
        amount = amount + Current_Wave * 20
        for i = 1, 6 do
            if PlayerHero[i] then
                SetPlayerState(Player(i-1), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(Player(i-1), PLAYER_STATE_RESOURCE_GOLD) + amount)
                PlayLocalSound("Abilities\\Spells\\Items\\ResourceItems\\ReceiveGold.wav", i-1, 120)
                --AddHeroXP(PlayerHero[i], amount + (Current_Wave * 3), false)
            end
        end
        return amount
    end




    function HeroSelect()
        local region = GetTriggeringRegion()
        local id
        local player_id = GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
        local starting_items = {}
        local starting_skills = {}

            ActivePlayers = ActivePlayers + 1

            if region == ClassRegions[BARBARIAN_CLASS] then
                id = FourCC("HBRB")
                starting_items[1] = CreateCustomItem("I011", 0., 0.)
                starting_items[2] = CreateCustomItem("I00X", 0., 0.)
                starting_items[3] = CreateCustomItem("I010", 0., 0.)
                starting_items[4] = CreateCustomItem("I00Z", 0., 0.)
                starting_items[5] = CreateCustomItem("I00Y", 0., 0.)
                starting_skills[1] = 'A007'
                starting_skills[2] = 'A00C'
                starting_skills[3] = 'A00Z'

                --starting_skills[4] = 'A010'
                --starting_skills[5] = 'A006'
                --starting_skills[6] = 'A00O'
            elseif region == ClassRegions[SORCERESS_CLASS] then
                id = FourCC("HSRC")
                starting_items[1] = CreateCustomItem("I012", 0., 0.)
                starting_items[2] = CreateCustomItem("I00X", 0., 0.)
                starting_items[3] = CreateCustomItem("I010", 0., 0.)
                starting_items[4] = CreateCustomItem("I00Z", 0., 0.)
                starting_items[5] = CreateCustomItem("I00Y", 0., 0.)
                starting_skills[1] = 'A003'
                starting_skills[2] = 'A00J'
                starting_skills[3] = 'A00D'
                --starting_skills[4] = "AMLT"
                --[[
                starting_skills[4] = 'A005'
                starting_skills[5] = 'A00L'
                starting_skills[6] = 'A001'
                starting_skills[7] = 'A00K'
                starting_skills[8] = 'A00M'
                starting_skills[9] = 'A019'
                starting_skills[10] = 'A00F'
                starting_skills[11] = 'A00I'
                starting_skills[12] = 'A00N'
                starting_skills[13] = 'A00E'
                starting_skills[14] = 'A00H']]
            elseif region == ClassRegions[NECROMANCER_CLASS] then
                id = FourCC("HNCR")
                starting_items[1] = CreateCustomItem("I012", 0., 0.)
                starting_items[2] = CreateCustomItem("I00X", 0., 0.)
                starting_items[3] = CreateCustomItem("I010", 0., 0.)
                starting_items[4] = CreateCustomItem("I00Z", 0., 0.)
                starting_items[5] = CreateCustomItem("I00Y", 0., 0.)
                starting_skills[1] = "ANRD"
                starting_skills[2] = "ANBP"
                starting_skills[3] = "ANBS"
                starting_skills[4] = "ANGS"
                starting_skills[5] = "ANUC"
                starting_skills[6] = "ANDR"
                starting_skills[7] = "ANHV"
                starting_skills[8] = "ANWK"
                starting_skills[9] = "ANUL"
                starting_skills[10] = "ANCE"
                starting_skills[11] = "ANDV"
                starting_skills[12] = "ANDF"
                starting_skills[13] = "ANFR"
                starting_skills[14] = "ANBB"
                starting_skills[15] = "ANLR"
                starting_skills[16] = "ANPB"
                starting_skills[17] = "ANBR"
                starting_skills[18] = "ANTS"
            else
                ActivePlayers = ActivePlayers - 1
                return
            end

                local hero = CreateUnit(Player(player_id), id, GetRectCenterX(gg_rct_starting_location) , GetRectCenterY(gg_rct_starting_location), 270.)
                RemoveUnit(GetTriggerUnit())

                DelayAction(0., function()
                    local unit_data = GetUnitData(hero)
                    BlzSetHeroProperName(hero, HeroProperNames[unit_data.unit_class][GetRandomInt(1, #HeroProperNames[unit_data.unit_class])])
                    if region == ClassRegions[NECROMANCER_CLASS] then RegisterNecromancerCorpseSpawn(hero) end
                end)



                --SelectUnit(hero, true)
                --SelectUnitAddForPlayer(hero, Player(player_id))

                SetCameraBoundsToRectForPlayerBJ(Player(player_id), bj_mapInitialCameraBounds)


                local player_number = player_id
                player_id = player_id + 1
                PlayerHero[player_id] = hero

                    TriggerRegisterDeathEvent(DeathTrigger, hero)
                    TriggerRegisterUnitEvent(LvlupTrigger, hero, EVENT_UNIT_HERO_LEVEL)
                    TriggerRegisterUnitEvent(OrderInterceptionTrigger, hero, EVENT_UNIT_ATTACKED)
                    local damage_trigger = CreateTrigger()
                    local hp_state_trigger = CreateTrigger()
                    TriggerRegisterUnitEvent(damage_trigger, hero, EVENT_UNIT_DAMAGED)
                    TriggerAddAction(damage_trigger, function()
                        if GetEventDamage() > 0 then
                            if (GetUnitState(hero, UNIT_STATE_LIFE) - GetEventDamage()) / BlzGetUnitMaxHP(hero) < 0.2 then
                                Feedback_Health(player_id)
                                SetCineFilterTexture("ReplaceableTextures\\CameraMasks\\DreamFilter_Mask.blp")
                                SetCineFilterBlendMode(BLEND_MODE_ADDITIVE)
                                SetCineFilterTexMapFlags(TEXMAP_FLAG_NONE)
                                SetCineFilterStartUV(0, 0, 1, 1)
                                SetCineFilterEndUV(0, 0, 1, 1)
                                SetCineFilterStartColor(255, 75, 75, 0)
                                SetCineFilterEndColor(255, 75, 75, 100)
                                if GetLocalPlayer() == Player(player_number) then DisplayCineFilter(true) end
                                SetCineFilterDuration(0.75)
                                EnableTrigger(hp_state_trigger)
                                DisableTrigger(damage_trigger)
                            end
                        end
                    end)

                    TriggerRegisterTimerEventPeriodic(hp_state_trigger, 0.33)
                    TriggerAddAction(hp_state_trigger, function()
                        if GetUnitState(hero, UNIT_STATE_LIFE) / BlzGetUnitMaxHP(hero) > 0.2 then
                            if GetLocalPlayer() == Player(player_number) then DisplayCineFilter(false) end
                            EnableTrigger(damage_trigger)
                            DisableTrigger(hp_state_trigger)
                        end
                    end)

                    --TriggerRegisterUnitEvent(OrderInterceptionTrigger, hero, EVENT_UNIT_ISSUED_TARGET_ORDER)


                    CreateGUILayoutForPlayer(player_id, hero)
                    LockCameraForPlayer(player_id)
                    RegisterItemPickUp(PlayerHero[player_id])

                    local timer = CreateTimer()
                    TimerStart(timer, 3., false, function()
                        local pid = player_id

                            for i = 1, #starting_items do
                                --AddToInventory(pid, starting_items[i])
                                EquipItem(hero, starting_items[i], true)
                                SetItemVisible(starting_items[i], false)
                            end

                        local potions = CreateCustomItem(ITEM_POTION_HEALTH_WEAK, 0, 0, false)
                        SetItemCharges(potions, 5)
                        AddToInventory(pid, potions)
                        potions = CreateCustomItem(ITEM_POTION_MANA_WEAK, 0, 0, false)
                        SetItemCharges(potions, 5)
                        AddToInventory(pid, potions)
                        UpdateEquipPointsWindow(pid)

                        for i = 1, #starting_skills do
                            UnitAddMyAbility(hero, starting_skills[i])
                        end

                        SelectUnitForPlayerSingle(hero, Player(player_number))
                        AddPointsToPlayer(player_id, 0)
                        EnableGUIForPlayer(player_id)
                        ShowPlayerUI(player_id)

                    end)


                    if id == FourCC("HBRB") then BlzSetUnitName(hero, LOCALE_LIST[my_locale].BARBARIAN_NAME)
                    elseif id == FourCC("HSRC") then BlzSetUnitName(hero, LOCALE_LIST[my_locale].SORCERESS_NAME)
                    else BlzSetUnitName(hero, GetLocalString("Некромант", "Necromancer")) end


                    DelayAction(6., function()
                        PlayCinematicSpeech(player_id-1, gg_unit_h000_0054, LOCALE_LIST[my_locale].INTRODUCTION_TEXT_1, 6.)
                        DelayAction(7., function()
                            PlayCinematicSpeech(player_id-1, gg_unit_h000_0054, LOCALE_LIST[my_locale].INTRODUCTION_TEXT_2, 6.)
                            DelayAction(7., function()
                                PlayCinematicSpeech(player_id-1, gg_unit_h000_0054, LOCALE_LIST[my_locale].INTRODUCTION_TEXT_3, 6.)
                                DelayAction(7., function()
                                    if id == FourCC("HBRB") then
                                        PlayCinematicSpeech(player_id-1, PlayerHero[player_id], LOCALE_LIST[my_locale].INTRODUCTION_BARBARIAN_RESPONCE, 6.)
                                    else
                                        PlayCinematicSpeech(player_id-1, PlayerHero[player_id], LOCALE_LIST[my_locale].INTRODUCTION_SORCERESS_RESPONCE, 6.)
                                    end
                                end)
                            end)
                        end)
                    end)

                    --GetHandleId()
                    if GetLocalPlayer() == Player(player_id - 1) then
                        PanCameraToTimed(GetUnitX(hero), GetUnitY(hero), 0.)
                    end

        SuspendHeroXP(hero, true)
        SetPlayerHandicapXP(Player(player_id-1), 0.)
        --DestroyTimer(GetExpiredTimer())

    end



    BarbarianRegion = 0
    SorceressRegion = 0
    NecromancerRegion = 0
    ClassRegions = nil


    local function CreateClassText(rect, text)
        local texttag = CreateTextTag()
        SetTextTagText(texttag, text, 0.02)
        SetTextTagColor(texttag, 255, 140, 140, 0)
        SetTextTagPos(texttag, GetRectCenterX(rect)-32., GetRectCenterY(rect), 35.)
    end


    function CreateHeroSelections()


        PlayerRequiredEXP = {}
        PlayerLastRequiredEXP = {}

        for i = 1, 6 do
            PlayerLastRequiredEXP[i] = 0
            PlayerRequiredEXP[i] = GetLevelXP(1)
        end

        DeathTrigger = CreateTrigger()
        LvlupTrigger = CreateTrigger()
        local trg = CreateTrigger()

        --BarbarianRegion = CreateRegion()
        --SorceressRegion = CreateRegion()
        --NecromancerRegion = CreateRegion()

        local class_rects = {
            [BARBARIAN_CLASS] = gg_rct_barbarian_select,
            [SORCERESS_CLASS] = gg_rct_sorceress_select,
            [NECROMANCER_CLASS] = gg_rct_necro_select
        }

        ClassRegions = { }

        for i = 1, 9 do
            if class_rects[i] then
                ClassRegions[i] = CreateRegion()
                RegionAddRect(ClassRegions[i], class_rects[i])
                TriggerRegisterEnterRegionSimple(trg, ClassRegions[i])
            end
        end

        --RegionAddRect(SorceressRegion, gg_rct_sorceress_select)
        --RegionAddRect(BarbarianRegion, gg_rct_barbarian_select)
        --RegionAddRect(NecromancerRegion, gg_rct_necro_select)
        CreateClassText(gg_rct_barbarian_select, LOCALE_LIST[my_locale].BARBARIAN_NAME)
        CreateClassText(gg_rct_sorceress_select, LOCALE_LIST[my_locale].SORCERESS_NAME)
        CreateClassText(gg_rct_necro_select, LOCALE_LIST[my_locale].NECROMANCER_NAME)

        --TriggerRegisterEnterRegionSimple(trg, BarbarianRegion)
        --TriggerRegisterEnterRegionSimple(trg, SorceressRegion)
        --TriggerRegisterEnterRegionSimple(trg, NecromancerRegion)
        TriggerAddAction(trg, HeroSelect)


        TriggerAddAction(LvlupTrigger, function()
            local player_id = GetPlayerId(GetOwningPlayer(GetTriggerUnit())) + 1
            AddPointsToPlayer(player_id, 3)
            DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\Levelup\\LevelupCaster.mdx", PlayerHero[player_id], "origin"))
            PlayerLastRequiredEXP[player_id] = math.floor(GetLevelXP(GetHeroLevel(PlayerHero[player_id]) - 1) + 0.5)
            PlayerRequiredEXP[player_id] = math.floor(GetLevelXP(GetHeroLevel(PlayerHero[player_id])) + 0.5)
            AddTalentPointsToPlayer(player_id, 1)
        end)

        TriggerAddAction(DeathTrigger, function ()
            local hero = GetTriggerUnit()
            local player = GetOwningPlayer(hero)
            local unit_data = GetUnitData(hero)

            DisplayTextToPlayer(player, 0.,0., LOCALE_LIST[my_locale].RESSURECT_TEXT_1 .. string.format('%%.2f', R2S(7. + (Current_Wave / 4.))) .. LOCALE_LIST[my_locale].RESSURECT_TEXT_2)
            ResetUnitSpellCast(hero)
            SetUIState(GetPlayerId(player)+1, INV_PANEL, false)
            SetUIState(GetPlayerId(player)+1, SKILL_PANEL, false)
            local gold_lost = R2I(GetPlayerState(player, PLAYER_STATE_RESOURCE_GOLD) * 0.2)

            if gold_lost > 1 then
                DisplayTextToPlayer(player, 0.,0., LOCALE_LIST[my_locale].GOLD_PENALTY_TEXT_1 .. R2I(gold_lost) .. LOCALE_LIST[my_locale].GOLD_PENALTY_TEXT_2)
                SetPlayerState(player, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(player, PLAYER_STATE_RESOURCE_GOLD) - gold_lost)
            end


            AddSoundVolumeZ(HeroDeathSoundpack[unit_data.unit_class][GetRandomInt(1, #HeroDeathSoundpack[unit_data.unit_class])], GetUnitX(hero), GetUnitY(hero), 50., 115, 2200.)
                local timer = CreateTimer()
                TimerStart(timer, 7. + (Current_Wave / 4.), false, function()
                    ReviveHero(hero, CemetaryX, CemetaryY, true)
                    SetUnitTimeScale(hero, 1.)
                    SetUnitAnimationByIndex(hero, 0)
                    IssueImmediateOrderById(hero, order_stop)
                    SetUnitState(hero, UNIT_STATE_LIFE, GetUnitState(hero, UNIT_STATE_MAX_LIFE) * 0.5)
                    SetUnitState(hero, UNIT_STATE_MANA, GetUnitState(hero, UNIT_STATE_MAX_MANA) * 0.5)
                    DestroyTimer(GetExpiredTimer())
                    SelectUnitForPlayerSingle(hero, player)
                    for i = 1, #ActiveCurses do ApplyCurse(ActiveCurses[i]) end
                    local minions = GetAllUnitSummonUnits(hero)
                    ForGroup(minions, function() KillUnit(GetEnumUnit()) end)
                    DestroyGroup(minions)
                end)

        end)


        local DefeatTrigger = CreateTrigger()
        TriggerRegisterUnitEvent(DefeatTrigger, gg_unit_h001_0057, EVENT_UNIT_DEATH)
        TriggerAddAction(DefeatTrigger, function()
            DefeatScreen()
        end)



        RegisterTestCommand("ded", function()
            KillUnit(PlayerHero[1])
        end)

        RegisterTestCommand('vct', function()
            Current_Wave = 51
            EndWave()
        end)

        RegisterTestCommand('dft', function()
            KillUnit(gg_unit_h001_0057)
        end)


        HeroDeathSoundpack = {
            [BARBARIAN_CLASS] = { "Sound\\Barbarian\\death1.wav", "Sound\\Barbarian\\death2.wav" },
            [SORCERESS_CLASS] = { "Sound\\Sorceress\\death1.wav", "Sound\\Sorceress\\death2.wav", "Sound\\Sorceress\\death3.wav" },
            [NECROMANCER_CLASS] = { "Sound\\Necromancer\\death1.wav", "Sound\\Necromancer\\death3.wav" },
        }

        HeroProperNames = {
            [BARBARIAN_CLASS] = {
                LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_1, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_2, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_3, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_4,
                LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_5, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_6, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_7, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_8,
                LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_9, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_10, LOCALE_LIST[my_locale].BARBARIAN_PROPER_NAME_11
            },
            [SORCERESS_CLASS] = {
                LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_1, LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_2, LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_3, LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_4,
                LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_5, LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_6, LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_7, LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_8,
                LOCALE_LIST[my_locale].SORCERESS_PROPER_NAME_9
            },
            [NECROMANCER_CLASS] = {
                LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_1, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_2, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_3, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_4,
                LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_5, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_6, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_7, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_8,
                LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_9, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_10, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_11, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_12,
                LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_13, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_14, LOCALE_LIST[my_locale].NECROMANCER_PROPER_NAME_15
            },
        }

        CemetaryX, CemetaryY = GetRectCenterX(gg_rct_cemetary), GetRectCenterY(gg_rct_cemetary)

        RegisterTestCommand("exp", function()
            SuspendHeroXP(PlayerHero[1], false)
            AddHeroXP(PlayerHero[1], 100, false)
            SuspendHeroXP(PlayerHero[1], true)
        end)


    end

end