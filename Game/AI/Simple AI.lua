---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MSI.
--- DateTime: 10.06.2021 22:09
---
do



    local AITable



    function AttackReaction()
        local unit

            if AITable[GetUnitTypeId(GetTriggerUnit())] then
                unit = GetTriggerUnit()
                local ai = AITable[GetUnitTypeId(unit)]


                for i = 1, #ai.ability_list do
                    if Chance(ai.ability_list[i].on_hit_chance) then

                        if ai.ability_list[i].activation == SELF_CAST then
                            IssueImmediateOrderById(unit, ai.ability_list[i].order)
                        elseif ai.ability_list[i].activation == TARGET_CAST then
                            IssueTargetOrderById(unit, ai.ability_list[i].order, GetAttacker())
                        elseif ai.ability_list[i].activation == POINT_CAST then
                            IssuePointOrderById(unit, ai.ability_list[i].order, GetUnitX(GetAttacker()), GetUnitY(GetAttacker()))
                        end

                        break
                    end
                end

            elseif AITable[GetUnitTypeId(GetAttacker())] then
                unit = GetAttacker()
                local ai = AITable[GetUnitTypeId(unit)]


                for i = 1, #ai.ability_list do
                    if Chance(ai.ability_list[i].on_attack_chance) then

                        if ai.ability_list[i].activation == SELF_CAST then
                            IssueImmediateOrderById(unit, ai.ability_list[i].order)
                        elseif ai.ability_list[i].activation == TARGET_CAST then
                            IssueTargetOrderById(unit, ai.ability_list[i].order, GetTriggerUnit())
                        elseif ai.ability_list[i].activation == POINT_CAST then
                            IssuePointOrderById(unit, ai.ability_list[i].order, GetUnitX(GetTriggerUnit()), GetUnitY(GetTriggerUnit()))
                        end

                        break
                    end
                end

            end

    end


    function InitMyAI()

        AITable = {
            [FourCC("U000")] = {
                ability_list = {
                    { order = order_forceboard, activation = SELF_CAST, on_attack_chance = 10., on_hit_chance = 10. }
                }
            },
            [FourCC("n00S")] = {
                ability_list = {
                    { order = order_forkedlightning, activation = SELF_CAST, on_attack_chance = 0., on_hit_chance = 10. },
                    { order = order_forceofnature, activation = TARGET_CAST, on_attack_chance = 15., on_hit_chance = 0. },
                    { order = order_freezingbreath, activation = TARGET_CAST, on_attack_chance = 3., on_hit_chance = 10. }
                }
            },
            [FourCC("n00X")] = {
                ability_list = {
                    { order = order_forceofnature, activation = TARGET_CAST, on_attack_chance = 0., on_hit_chance = 10. },
                }
            },
            [FourCC("n015")] = {
                ability_list = {
                    { order = order_forceofnature, activation = SELF_CAST, on_attack_chance = 0., on_hit_chance = 10. },
                    { order = order_forceboard, activation = TARGET_CAST, on_attack_chance = 7., on_hit_chance = 7. },
                }
            },
            [FourCC("n012")] = {
                ability_list = {
                    { order = order_frenzy, activation = SELF_CAST, on_attack_chance = 0., on_hit_chance = 10. },
                    { order = order_forceofnature, activation = TARGET_CAST, on_attack_chance = 10., on_hit_chance = 0. },
                    { order = order_forkedlightning, activation = TARGET_CAST, on_attack_chance = 7., on_hit_chance = 7. },
                    { order = order_freezingbreath, activation = SELF_CAST, on_attack_chance = 0., on_hit_chance = 7. },
                }
            }
        }


        local AttackTrg = CreateTrigger()
        TriggerRegisterAnyUnitEventBJ(AttackTrg, EVENT_PLAYER_UNIT_ATTACKED)
        TriggerAddAction(AttackTrg, AttackReaction)

    end

end