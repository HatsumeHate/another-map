---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hatsu.
--- DateTime: 24.05.2024 17:41
---
do


    function DaggerExpertTalentEffect(unit)
        local unit_data = GetUnitData(unit)

        if unit_data.dagger_expert_bonus then
            ModifyStat(unit, PHYSICAL_ATTACK, unit_data.dagger_expert_bonus, MULTIPLY_BONUS, false)
        end

        local main_hand = GetUnitPointItem(unit, WEAPON_POINT)
        local offhand = GetUnitPointItem(unit, OFFHAND_POINT)

            if main_hand and GetUnitTalentLevel(unit, "talent_dagger_expert") > 0 then

                if offhand and IsItemSubType(offhand, DAGGER_WEAPON) then
                    unit_data.dagger_expert_bonus = 1. + 0.1 * GetUnitTalentLevel(unit, "talent_dagger_expert")
                else
                    unit_data.dagger_expert_bonus = 1. + 0.05 * GetUnitTalentLevel(unit, "talent_dagger_expert")
                end

                ModifyStat(unit, PHYSICAL_ATTACK, unit_data.dagger_expert_bonus, MULTIPLY_BONUS, true)

            else
                unit_data.dagger_expert_bonus = nil
            end

    end


    function AmbushTalentEffect(unit)
        local unit_data = GetUnitData(unit)

            if not unit_data.ambush_timer then
                unit_data.ambush_timer = CreateTimer()
            end

            TimerStart(unit_data.ambush_timer, 6 - GetUnitTalentLevel(unit, "talent_ambush"), false, function()
                ApplyBuff(unit, unit, "A02O", 1)
            end)

            RemoveBuff(unit, "A02O")

    end


    function UnmatchedTechniqueTalentEffect(source, skill)
        local unit_data = GetUnitData(source)

            if unit_data.last_used_skill then
                if unit_data.last_used_skill == skill.Id then
                    RemoveBuff(source, "A02Q")
                    unit_data.unmatched_technique_bonus = 0
                else
                    unit_data.unmatched_technique_bonus = unit_data.unmatched_technique_bonus + 1
                    if unit_data.unmatched_technique_bonus > 5 then unit_data.unmatched_technique_bonus = 5 end
                    ApplyBuff(source, source, "A02Q", unit_data.unmatched_technique_bonus)
                end
            else
                unit_data.unmatched_technique_bonus = 1
                ApplyBuff(source, source, "A02Q", unit_data.unmatched_technique_bonus)
            end

            unit_data.last_used_skill = skill.Id

    end



    function BowExpertTalentEffect(unit)
        local unit_data = GetUnitData(unit)

        if unit_data.bow_expert_bonus then
            ModifyStat(unit, CRIT_CHANCE, unit_data.bow_expert_bonus, STRAIGHT_BONUS, false)
        end

        local main_hand = GetUnitPointItem(unit, WEAPON_POINT)

            if main_hand and GetUnitTalentLevel(unit, "talent_archery_master") > 0 then
                unit_data.bow_expert_bonus = 7.5 * GetUnitTalentLevel(unit, "talent_archery_master")
                ModifyStat(unit, CRIT_CHANCE, unit_data.bow_expert_bonus, STRAIGHT_BONUS, true)
            else
                unit_data.bow_expert_bonus = nil
            end

    end


    function ClearSightTalentEffect(unit)
        local unit_data = GetUnitData(unit)
        local player_entity = GetOwningPlayer(unit)

        if not unit_data.clear_sight_timer then
            unit_data.clear_sight_timer = CreateTimer()
        end

            TimerStart(unit_data.clear_sight_timer, 0.1, true, function()
                local group = CreateGroup()
                local flag = true
                GroupEnumUnitsInRange(group, GetUnitX(unit), GetUnitY(unit), 250., nil)

                    for index = BlzGroupGetSize(group) - 1, 0, -1 do
                        local picked = BlzGroupUnitAt(group, index)

                        if IsUnitEnemy(picked, player_entity) and GetUnitState(picked, UNIT_STATE_LIFE) > 0.045 and GetUnitAbilityLevel(picked, FourCC("Avul")) == 0 then
                            RemoveBuff(unit, "A02R")
                            flag = false
                            break
                        end
                    end

                if flag then ApplyBuff(unit, unit, "A02R", GetUnitTalentLevel(unit, "talent_clear_sight")) end
                DestroyGroup(group)
            end)


    end

    function HawkeyeTalentEffect(source, target)
        local unit_data = GetUnitData(target)
        local player = GetOwningPlayer(source)
        local base_bonus = 0.02

            if not unit_data.hawkeye_stack then unit_data.hawkeye_stack = {} end

            if not unit_data.hawkeye_stack[player] then
                unit_data.hawkeye_stack[player] = {
                    stacks = 0,
                    bonus = 1.,
                    timer = CreateTimer()
                }
            end

            if not unit_data.hawkeye_stack[player].timer then
                unit_data.hawkeye_stack[player].timer = CreateTimer()
            end

            unit_data.hawkeye_stack[player].stacks = unit_data.hawkeye_stack[player].stacks + 1
            if unit_data.hawkeye_stack[player].stacks > 3 then unit_data.hawkeye_stack[player].stacks = 3 end

            unit_data.hawkeye_stack[player].bonus = 1. + (base_bonus + (0.01 * GetUnitTalentLevel(source, "talent_hawkeye"))) * unit_data.hawkeye_stack[player].stacks

                TimerStart(unit_data.hawkeye_stack[player].timer, 5., false, function()
                    unit_data.hawkeye_stack[player].bonus = 1.
                    DestroyTimer(unit_data.hawkeye_stack[player].timer)
                    unit_data.hawkeye_stack[player].timer = nil
                end)

    end


    function FastReloadTalentEffect(source)
        local max = GetUnitTalentLevel(source, "talent_fast_reload") * 3
        local level = GetBuffLevel(source, "A02V")
        local min = max - 3
        local current = 1

            if level == 0 then current = min + 1
            else current = min + (3 - max + level) + 1 end

            if current <= max then ApplyBuff(source, source, "A02V", current) end
            SetBuffExpirationTime(source, "A02V", -1.)
            local val = 3 - (max - current)
            if val > 3 then val = 3 end
            SetStatusBarValue("A02V", val, GetPlayerId(GetOwningPlayer(source))+1)

    end


end