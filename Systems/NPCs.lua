---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MSI.
--- DateTime: 12.10.2021 3:13
---
do

    local InteractionFrame
    local ButtonPressedTrigger
    local ClickInteractionTrigger



    ---@param npc unit
    ---@param option_number integer
    function RemoveInteractiveOption(npc, option_number)
        local npc_data = GetUnitData(npc)
        table.remove(npc_data.interactive_options, option_number)
    end

    ---@param npc unit
    ---@param option_id integer
    function RemoveInteractiveOptionId(npc, option_id)
        local npc_data = GetUnitData(npc)

            for i = 1, #npc_data.interactive_options do
                if npc_data.interactive_options[i].id == option_id then
                    table.remove(npc_data.interactive_options, i)
                    break
                end
            end

    end

    ---@param npc unit
    ---@param feedback function
    function InteractionFeedbackExists(npc, feedback)
        local npc_data = GetUnitData(npc)

            for i = 1, #npc_data.interactive_options do
                if npc_data.interactive_options[i].feedback == feedback then
                    return true
                end
            end

        return false
    end


    ---@param npc unit
    ---@param option_id string
    ---@param player integer
    function UnlockInteractiveOptionIdPlayer(npc, option_id, player)
        local npc_data = GetUnitData(npc)

            for i = 1, #npc_data.interactive_options do
                if npc_data.interactive_options[i].id and npc_data.interactive_options[i].id == option_id then
                    npc_data.interactive_options[i].locked_for[player] = false
                    break
                end
            end

    end

    ---@param npc unit
    ---@param option_id string
    function UnlockInteractiveOptionId(npc, option_id)
        local npc_data = GetUnitData(npc)

            for i = 1, #npc_data.interactive_options do
                if npc_data.interactive_options[i].id and npc_data.interactive_options[i].id == option_id then
                    for player = 1, 6 do
                        npc_data.interactive_options[i].locked_for[player] = false
                    end
                    break
                end
            end

    end

    ---@param npc unit
    ---@param option_id string
    ---@param player integer
    function LockInteractiveOptionIdPlayer(npc, option_id, player)
        local npc_data = GetUnitData(npc)

        for i = 1, #npc_data.interactive_options do
            if npc_data.interactive_options[i].id and npc_data.interactive_options[i].id == option_id then
                if npc_data.interactive_options[i].locked_for then
                    npc_data.interactive_options[i].locked_for[player] = true
                else
                    npc_data.interactive_options[i].locked_for = { }
                    for k = 1, 6 do npc_data.interactive_options[i].locked_for[k] = false end
                    npc_data.interactive_options[i].locked_for[player] = true
                end
                break
            end
        end

    end

    ---@param npc unit
    ---@param option_id string
    function LockInteractiveOptionId(npc, option_id)
        local npc_data = GetUnitData(npc)

        for i = 1, #npc_data.interactive_options do
            if npc_data.interactive_options[i].id and npc_data.interactive_options[i].id == option_id then
                npc_data.interactive_options[i].locked_for = { true, true, true, true, true, true }
                break
            end
        end
        
    end

    ---@param npc unit
    ---@param option table
    ---@return integer
    ---@param position integer
    function AddInteractiveOption(npc, option, position)
        local npc_data = GetUnitData(npc)
            if not position then position = #npc_data.interactive_options + 1 end
            table.insert(npc_data.interactive_options, position, option)
        return position
    end

    ---@param npc unit
    ---@param name string
    function CreateNpcData(npc, name)
        UnitsList[GetHandleId(npc)] = {
            name = name,
            Owner = npc,
            classification = NPC,
            interactive_options = {},
            interaction_blocked = {}
        }
        BlzSetUnitName(npc, name)
    end

    ---@param id integer
    ---@param position rect
    ---@param facing real
    ---@return unit
    function CreateNPC(id, position, facing, name)
        local npc = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), FourCC(id), GetRectCenterX(position), GetRectCenterY(position), facing)
        BlzSetUnitName(npc, name)
        CreateNpcData(npc, name)
        return npc
    end

    function ReloadInteractionFrames()
        for player = 1, 6 do
            if PlayerHero[player] then
                InteractionFrame[player].mainframe =  BlzCreateFrame('EscMenuBackdrop', GAME_UI, 0, 0)

                BlzFrameSetPoint(InteractionFrame[player].mainframe, FRAMEPOINT_CENTER, GAME_UI, FRAMEPOINT_CENTER, 0., 0.)
                BlzFrameSetSize(InteractionFrame[player].mainframe, 0.12, 0.2)

                    for k = 1, 6 do
                        InteractionFrame[player].slots[k].button = BlzCreateFrame('ScriptDialogButton', InteractionFrame[player].mainframe, 0, 0)
                        InteractionFrame[player].slots[k].text = BlzGetFrameByName("ScriptDialogButtonText", 0)
                        BlzFrameSetSize(InteractionFrame[player].slots[k].button, BlzFrameGetWidth(InteractionFrame[player].mainframe) * 0.8, 0.025)
                        BlzFrameSetTextAlignment(InteractionFrame[player].slots[k].text, TEXT_JUSTIFY_CENTER , TEXT_JUSTIFY_MIDDLE)
                        BlzFrameSetVisible(InteractionFrame[player].slots[k].button, false)
                        BlzTriggerRegisterFrameEvent(ButtonPressedTrigger, InteractionFrame[player].slots[k].button, FRAMEEVENT_CONTROL_CLICK)
                    end

                BlzFrameSetVisible(InteractionFrame[player].mainframe, false)
            end
        end
    end


    local function CreateInteractionFrame()

        ButtonPressedTrigger = CreateTrigger()
        InteractionFrame = {}

        for i = 1, 6 do
            InteractionFrame[i] = {}
            InteractionFrame[i].mainframe =  BlzCreateFrame('EscMenuBackdrop', GAME_UI, 0, 0)

            BlzFrameSetPoint(InteractionFrame[i].mainframe, FRAMEPOINT_CENTER, GAME_UI, FRAMEPOINT_CENTER, 0., 0.)
            BlzFrameSetSize(InteractionFrame[i].mainframe, 0.12, 0.2)

            InteractionFrame[i].slots = {}

                for k = 1, 6 do
                    InteractionFrame[i].slots[k] = {}
                    InteractionFrame[i].slots[k].button = BlzCreateFrame('ScriptDialogButton', InteractionFrame[i].mainframe, 0, 0)
                    InteractionFrame[i].slots[k].text = BlzGetFrameByName("ScriptDialogButtonText", 0)
                    BlzFrameSetSize(InteractionFrame[i].slots[k].button, BlzFrameGetWidth(InteractionFrame[i].mainframe) * 0.8, 0.025)
                    BlzFrameSetTextAlignment(InteractionFrame[i].slots[k].text, TEXT_JUSTIFY_CENTER , TEXT_JUSTIFY_MIDDLE)
                    BlzFrameSetVisible(InteractionFrame[i].slots[k].button, false)
                    BlzTriggerRegisterFrameEvent(ButtonPressedTrigger, InteractionFrame[i].slots[k].button, FRAMEEVENT_CONTROL_CLICK)
                end

            BlzFrameSetVisible(InteractionFrame[i].mainframe, false)
        end

        TriggerAddAction(ButtonPressedTrigger, function()
            local player = GetPlayerId(GetTriggerPlayer()) + 1
            local button = BlzGetTriggerFrame()

                for i = 1, #InteractionFrame[player].slots do
                    if InteractionFrame[player].slots[i].button == button then
                        button = i
                        break
                    end
                end

                SetInteractionMenuState(false, player)
                InteractionFrame[player].slots[button].react()
        end)

    end



    ---@param player integer
    ---@param name string
    ---@param feedback function
    function AddInteractiveOptionFrame(player, name, feedback)

        InteractionFrame[player].options = InteractionFrame[player].options + 1
        local slot = InteractionFrame[player].slots[InteractionFrame[player].options]

        slot.react = feedback
        BlzFrameSetText(slot.text, name)
        BlzFrameSetVisible(slot.button, true)

        BlzFrameClearAllPoints(slot.button)
        if InteractionFrame[player].options == 1 then
            BlzFrameSetPoint(slot.button, FRAMEPOINT_TOP, InteractionFrame[player].mainframe, FRAMEPOINT_TOP, 0., -0.01)
        else
            BlzFrameSetPoint(slot.button, FRAMEPOINT_TOP, InteractionFrame[player].slots[InteractionFrame[player].options-1].button, FRAMEPOINT_BOTTOM, 0., -0.001)
        end

        BlzFrameSetSize(InteractionFrame[player].mainframe, BlzFrameGetWidth(InteractionFrame[player].mainframe), (BlzFrameGetHeight(slot.button) * InteractionFrame[player].options) + 0.02)
    end


    ---@param state boolean
    ---@param player integer
    function SetInteractionMenuState(state, player)

        InteractionFrame[player].state = state

            if state then
                if GetLocalPlayer() == Player(player-1) then BlzFrameSetVisible(InteractionFrame[player].mainframe, true) end
                InteractionFrame[player].options = 0
            else
                if GetLocalPlayer() == Player(player-1) then BlzFrameSetVisible(InteractionFrame[player].mainframe, false) end
                for i = 1, #InteractionFrame[player].slots do
                    BlzFrameSetVisible(InteractionFrame[player].slots[i].button, false)
                end
            end

    end


    function InitNPCs()

        InitConversations()
        CreateInteractionFrame()

        ClickInteractionTrigger = CreateTrigger()
        TriggerRegisterAnyUnitEventBJ(ClickInteractionTrigger, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
        TriggerAddAction(ClickInteractionTrigger, function()

            if GetIssuedOrderId() == order_smart and GetOrderTargetUnit() then
                local unit_data = GetUnitData(GetOrderTargetUnit())
                local order_unit = GetTriggerUnit()

                    if unit_data.classification == NPC and not unit_data.interaction_blocked[GetPlayerId(GetOwningPlayer(order_unit))+1] and #unit_data.interactive_options > 0 and IsUnitInRange(order_unit, GetOrderTargetUnit(), 300.) then
                        local player = GetPlayerId(GetOwningPlayer(order_unit)) + 1
                        SetInteractionMenuState(true, player)

                                for i = 1, #unit_data.interactive_options do
                                    if not unit_data.interactive_options[i].locked_for or not unit_data.interactive_options[i].locked_for[player] then
                                        AddInteractiveOptionFrame(player, unit_data.interactive_options[i].name or "?",  function()
                                            if unit_data.interactive_options[i] and unit_data.interactive_options[i].feedback then
                                                unit_data.interactive_options[i].feedback(unit_data.Owner, order_unit, player)
                                            end
                                        end)
                                    end
                                end

                            AddInteractiveOptionFrame(player, GetLocalString("Закрыть", "Close"), function() SetInteractionMenuState(false, player) end)


                            local timer = CreateTimer()
                            TimerStart(timer, 0.1, true, function()
                                if not InteractionFrame[player].state or not IsUnitInRange(order_unit, unit_data.Owner, 300.) or GetUnitState(order_unit, UNIT_STATE_LIFE) < 0.045 then
                                    DestroyTimer(timer)
                                    SetInteractionMenuState(false, player)
                                end
                            end)


                    end
            end

        end)


        InitAnarNPC()
        InitRavens()

    end


end

