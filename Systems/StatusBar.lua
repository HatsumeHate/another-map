---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hatsu.
--- DateTime: 05.02.2024 15:55
---
do

    local StatusBarData
    local StatusBarButtons
    local MAX_STATUSES = 25


    ---@param button_type number
    ---@param texture string
    ---@param size_x real
    ---@param size_y real
    ---@param relative_frame framehandle
    ---@param frame_point_from framepointtype
    ---@param frame_point_to framepointtype
    ---@param offset_x real
    ---@param offset_y real
    ---@param parent_frame framehandle
    local function NewButton(texture, size_x, size_y, relative_frame, frame_point_from, frame_point_to, offset_x, offset_y, parent_frame)
        local new_Frame = BlzCreateFrame('ScriptDialogButton', parent_frame, 0, 0)
        local new_FrameImage = BlzCreateFrameByType("BACKDROP", "Icon", new_Frame, "", 0)
        local new_FrameCharges = BlzCreateFrameByType("BACKDROP", "ButtonCharges", new_Frame, "", 0)
        local new_FrameChargesText = BlzCreateFrameByType("TEXT", "ButtonChargesText", new_FrameCharges, "", 0)
        local new_FrameBorder = BlzCreateFrameByType("BACKDROP", "Border", new_Frame, "", 0)
        local new_FrameChargesBorder = BlzCreateFrameByType("BACKDROP", "Border", new_FrameCharges, "", 0)
        local new_FrameBar = BlzCreateSimpleFrame("MyBarEx", new_Frame, 0)
        local new_FrameBarText = BlzGetFrameByName("MyBarExText", 0)
        local new_FrameStatusBorder = BlzCreateFrameByType("BACKDROP", "Border", new_Frame, "", 0)
        local tooltip = CreateTooltip("header", "context", new_Frame, 0.14, 0.12)

        ButtonList[new_Frame] = {
            status = nil,
            button = new_Frame,
            image = new_FrameImage,
            charges_frame = new_FrameCharges,
            charges_text_frame = new_FrameChargesText,
            bar = new_FrameBar,
            bar_text = new_FrameBarText,
            status_border = new_FrameStatusBorder,
            tooltip = tooltip
        }

        BlzFrameSetScale(new_FrameBarText, 0.9)

        BlzFrameSetEnable(new_Frame, false)
        BlzFrameSetPoint(new_Frame, frame_point_from, relative_frame, frame_point_to, offset_x, offset_y)
        BlzFrameSetSize(new_Frame, size_x, size_y)
        BlzFrameSetTexture(new_FrameImage, texture, 0, true)
        BlzFrameSetAllPoints(new_FrameImage, new_Frame)

        BlzFrameSetPoint(new_FrameCharges, FRAMEPOINT_TOPRIGHT, new_FrameImage, FRAMEPOINT_BOTTOMRIGHT, 0.,0.)
        BlzFrameSetPoint(new_FrameCharges, FRAMEPOINT_TOPLEFT, new_FrameImage, FRAMEPOINT_BOTTOMLEFT, 0.,0.)
        BlzFrameSetSize(new_FrameCharges, 0.008, 0.008)
        BlzFrameSetTexture(new_FrameCharges, "GUI\\ChargesTexture.blp", 0, true)
        BlzFrameSetPoint(new_FrameChargesText, FRAMEPOINT_CENTER, new_FrameCharges, FRAMEPOINT_CENTER, 0.,0.)
        BlzFrameSetText(new_FrameChargesText, "")
        BlzFrameSetScale(new_FrameChargesText, 0.85)

        BlzFrameSetVisible(new_FrameCharges, false)

        BlzFrameSetSize(new_FrameBorder, 1., 1.)
        BlzFrameSetTexture(new_FrameBorder, "UI\\inventory_frame.blp", 0, true)
        BlzFrameSetAllPoints(new_FrameBorder, new_Frame)

        BlzFrameSetSize(new_FrameChargesBorder, 1., 1.)
        BlzFrameSetTexture(new_FrameChargesBorder, "UI\\inventory_frame.blp", 0, true)
        BlzFrameSetAllPoints(new_FrameChargesBorder, new_FrameCharges)

        BlzFrameSetPoint(new_FrameBar, FRAMEPOINT_BOTTOMLEFT, new_Frame, FRAMEPOINT_TOPLEFT, 0.,0.)
        BlzFrameSetPoint(new_FrameBar, FRAMEPOINT_BOTTOMRIGHT, new_Frame, FRAMEPOINT_TOPRIGHT, 0.,0.)
        BlzFrameSetSize(new_FrameBar, 0.038, 0.005)
        BlzFrameSetText(new_FrameBarText, "")
        BlzFrameSetTexture(new_FrameBar, "Replaceabletextures\\Teamcolor\\Teamcolor22.blp", 0, true)

        BlzFrameSetSize(new_FrameStatusBorder, 1., 1.)
        BlzFrameSetTexture(new_FrameStatusBorder, "UI\\RedHighlightUI.blp", 0, true)
        BlzFrameSetAllPoints(new_FrameStatusBorder, new_Frame)

        BlzFrameSetVisible(new_Frame, false)
        BlzFrameSetVisible(new_FrameBar, false)

        return new_Frame
    end



    local function ReplaceSlot(from, to, player)
        local button = GetButtonData(StatusBarButtons[player][from])
        local target_Button = GetButtonData(StatusBarButtons[player][to])

            StatusBarData[player][to] = MergeTables({}, StatusBarData[player][from])
            BlzFrameSetValue(target_Button.bar, BlzFrameGetValue(button.bar))
            BlzFrameSetText(target_Button.tooltip.title, BlzFrameGetText(button.tooltip.title))
            BlzFrameSetText(target_Button.tooltip.description, BlzFrameGetText(button.tooltip.description))
            BlzFrameSetSize(target_Button.tooltip.tooltip, StatusBarData[player][from].width, StatusBarData[player][from].height)
            UpdateStatusBarState(to, player)


    end


    ---@param index integer
    ---@param player integer
    function UpdateStatusBarState(index, player)
        if player > 6 then return end
        local data = StatusBarData[player][index] or nil
        local button = GetButtonData(StatusBarButtons[player][index])

            if data then

                    BlzFrameSetTexture(button.image, data.icon, 0, true)
                    if GetLocalPlayer() == Player(player - 1) then BlzFrameSetVisible(StatusBarButtons[player][index], true) end

                    if data.time then
                        if GetLocalPlayer() == Player(player - 1) then BlzFrameSetVisible(button.bar, true) end
                        BlzFrameSetMinMaxValue(button.bar, 0, data.time)
                    end

                    if data.value and data.value > 0 then
                        BlzFrameSetVisible(button.charges_frame, true)
                        BlzFrameSetText(button.charges_text_frame, I2S(math.floor(data.value + 0.5)))
                        if data.value >= 100 then BlzFrameSetScale(button.charges_text_frame, 0.65)
                        elseif data.value >= 10 then BlzFrameSetScale(button.charges_text_frame, 0.75)
                        else BlzFrameSetScale(button.charges_text_frame, 0.85) end
                    end

                    BlzFrameSetVisible(button.status_border, data.polarity == NEGATIVE_BUFF)

            else
                BlzFrameSetTexture(button.image, "ReplaceableTextures\\CommandButtons\\BTNPeon.blp", 0, true)
                BlzFrameSetVisible(StatusBarButtons[player][index], false)
                BlzFrameSetVisible(button.bar, false)
                BlzFrameSetVisible(button.charges_frame, false)
                BlzFrameSetText(button.charges_text_frame, "")

                local last_empty_slot = index

                    for i = index+1, MAX_STATUSES do
                        if StatusBarData[player][i] then
                            ReplaceSlot(i, last_empty_slot, player)
                            --UpdateStatusBarState(last_empty_slot, player)
                            StatusBarData[player][i] = nil
                            UpdateStatusBarState(i, player)
                            break
                        end
                    end

            end

    end


    ---@param id string
    ---@param value real
    ---@param player integer
    function UpdateStatusBarTime(id, value, player)
        if player > 6 then return end

            for i = 1, MAX_STATUSES do
                if StatusBarData[player][i] and StatusBarData[player][i].id == id then
                    local button = GetButtonData(StatusBarButtons[player][i])

                        BlzFrameSetValue(button.bar, value)
                        BlzFrameSetText(button.bar_text, I2S(math.floor(value  + 0.5)))
                        break
                end
            end

    end

    function SetStatusBarHeaderName(id, header, player)
        if player > 6 then return end

            for i = 1, MAX_STATUSES do
                if StatusBarData[player][i] and StatusBarData[player][i].id == id then
                    local button = GetButtonData(StatusBarButtons[player][i])
                    BlzFrameSetText(button.tooltip.title, header)
                    break
                end
            end

    end

    ---@param id string
    ---@param time real
    ---@param player integer
    function SetStatusBarTime(id, time, player)
        if player > 6 then return end

            for i = 1, MAX_STATUSES do
                if StatusBarData[player][i] and StatusBarData[player][i].id == id then
                    local button = GetButtonData(StatusBarButtons[player][i])

                        StatusBarData[player][i].time = time
                        BlzFrameSetMinMaxValue(button.bar, 0, time)
                        BlzFrameSetText(button.bar_text, I2S(math.floor(time  + 0.5)))
                        if GetLocalPlayer() == Player(player - 1) then BlzFrameSetVisible(button.bar, true) end
                        break
                end
            end

    end


    ---@param id string
    ---@param value real
    ---@param player integer
    function SetStatusBarValue(id, value, player)
        if player > 6 then return end

            for i = 1, MAX_STATUSES do
                if StatusBarData[player][i] and StatusBarData[player][i].id == id then
                    local button = GetButtonData(StatusBarButtons[player][i])

                        BlzFrameSetText(button.charges_text_frame, I2S(math.floor(value  + 0.5)))
                        BlzFrameSetVisible(button.charges_frame, true)
                        StatusBarData[player][i].value = value
                        break
                end

            end

    end


    function UpdateStatusBarTooltip(id, player)

        if player > 6 then return end

        for slot = 1, MAX_STATUSES do
            if StatusBarData[player][slot] and StatusBarData[player][slot].id == id then
                local button = GetButtonData(StatusBarButtons[player][slot])
                local buff_data = GetBuffDataFromUnit(PlayerHero[player], id) or nil
                local locale_data = LOCALE_LIST[my_locale].BUFFS[id]
                local description = "no description       "
                local level = 1

                    if buff_data then
                        BlzFrameSetText(button.tooltip.title, buff_data.name)
                        level = buff_data.current_level
                    else
                        BlzFrameSetText(button.tooltip.title, "no name")
                    end

                    if locale_data then
                        if locale_data[level] then
                            description = ParseLocalizationSkillTooltipString(locale_data[level], level)
                        else
                            for i = level, 1, -1 do
                                if locale_data[i] then
                                    description = ParseLocalizationSkillTooltipString(locale_data[i], level)
                                    break
                                end
                            end
                        end
                    end


                    local height_segments = math.ceil((#description / 25))
                    local width_segments = 0

                    if height_segments > 7 then
                        width_segments = math.floor(height_segments / 7)
                        height_segments = 7
                    end

                    local height = 0.02 + height_segments * 0.009
                    local width = 0.18 + width_segments * 0.07
                    BlzFrameSetSize(button.tooltip.tooltip, width, height)
                    BlzFrameSetText(button.tooltip.description, description)
                    StatusBarData[player][slot].height = height
                    StatusBarData[player][slot].width = width
                    break
            end
        end

    end

    ---@param id string
    ---@param player integer
    function RemoveStatusBarState(id, player)

        if player > 6 then return end

        for i = 1, MAX_STATUSES do
            if StatusBarData[player][i] and StatusBarData[player][i].id == id then
                StatusBarData[player][i] = nil
                UpdateStatusBarState(i, player)
            end
        end

    end

    function ClearStatusBar(player)
        if player > 6 then return end

        for i = 1, MAX_STATUSES do
            if StatusBarData[player][i] then
                StatusBarData[player][i] = nil
                UpdateStatusBarState(i, player)
            end
        end

    end


    ---@param id string
    ---@param icon string
    ---@param polarity integer
    ---@param player integer
    function AddStatusBarState(id, icon, polarity, player)

        if player > 6 then return end

        for i = 1, MAX_STATUSES do
            if StatusBarData[player][i] and StatusBarData[player][i].id == id then
                return
            end
        end

        local c = #StatusBarData[player]
        local slot = c + 1

        if slot > MAX_STATUSES then
            return
        end

            if polarity == POSITIVE_BUFF then

                    if StatusBarData[player][c] and StatusBarData[player][c].polarity == NEGATIVE_BUFF then
                        slot = c
                        for i = slot, 1, -1 do
                            if StatusBarData[player][i] and StatusBarData[player][i].polarity == NEGATIVE_BUFF then
                                ReplaceSlot(i, i+1, player)
                            else
                                break
                            end
                        end
                    end

            end


        StatusBarData[player][slot] = { id = id, icon = icon or "ReplaceableTextures\\CommandButtons\\BTNPeon.blp", polarity = polarity }
        UpdateStatusBarTooltip(id, player)
        UpdateStatusBarState(slot, player)

    end


    
    function DrawStatusBar()
        for player = 1, 6 do

            for i = 1, MAX_STATUSES do
                StatusBarButtons[player][i] = NewButton("ReplaceableTextures\\CommandButtons\\BTNPeon.blp", 0.019, 0.019, GAME_UI, FRAMEPOINT_CENTER, FRAMEPOINT_CENTER, 0., 0., GAME_UI)
            end

            BlzFrameClearAllPoints(StatusBarButtons[player][1])
            BlzFrameSetPoint(StatusBarButtons[player][1], FRAMEPOINT_BOTTOM, GlobalButton[player].char_panel_button, FRAMEPOINT_TOP, -0.018, 0.06)
            BlzFrameSetVisible(StatusBarButtons[player][1], false)

            for i = 2, MAX_STATUSES do
                BlzFrameClearAllPoints(StatusBarButtons[player][i])
                BlzFrameSetPoint(StatusBarButtons[player][i], FRAMEPOINT_LEFT, StatusBarButtons[player][i-1], FRAMEPOINT_RIGHT, 0.001, 0.)
                BlzFrameSetVisible(StatusBarButtons[player][i], false)
            end

        end
    end


    function ReloadStatusBar()
        DrawStatusBar()

            for player = 1, 6 do
                for i = 1, MAX_STATUSES do
                    if StatusBarData[player][i] then
                        UpdateStatusBarState(i, player)
                        UpdateStatusBarTooltip(StatusBarData[player][i].id, player)
                    end
                end
            end

    end


    function InitStatusBar()

        StatusBarData = {}
        StatusBarButtons = {}


        for i = 1, 6 do
            StatusBarData[i] = { }
            StatusBarButtons[i] = {}
        end

        DrawStatusBar()
    end


end