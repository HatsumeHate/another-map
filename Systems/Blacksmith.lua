---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MSI.
--- DateTime: 21.05.2021 0:32
---
do

    BlacksmithFrame = 0

    local BUTTON_FREE = 1
    local BUTTON_REFORGE = 2
    local BUTTON_RESOCKET = 3
    local BUTTON_SOCKET = 4
    BLACKSMITH_REFORGE = 1
    BLACKSMITH_RESOCKET = 2
    local REFORGE_COST_PER_LEVEL = 75




    local ClickTrigger = 0
    local EnterTrigger = 0
    local LeaveTrigger = 0


    local function CreateTextBox(player, size_x, size_y, scale, relative_frame, from, to, offset_x, offset_y, owning_frame)
        local new_frame = BlzCreateFrame('ScoreScreenButtonBackdropTemplate', owning_frame, 0, 0)
            BlzFrameSetPoint(new_frame, from, relative_frame, to, offset_x, offset_y)
            BlzFrameSetSize(new_frame, size_x, size_y)

            BlacksmithFrame[player].reforge_cost_frame = BlzCreateFrameByType("TEXT", "text", new_frame, "", 0)
            BlzFrameSetPoint(BlacksmithFrame[player].reforge_cost_frame, FRAMEPOINT_LEFT, new_frame, FRAMEPOINT_LEFT, 0.01, 0.)
            BlzFrameSetSize(BlacksmithFrame[player].reforge_cost_frame, 0.08, 0.03)
            BlzFrameSetText(BlacksmithFrame[player].reforge_cost_frame, "")
            BlzFrameSetTextAlignment(BlacksmithFrame[player].reforge_cost_frame, TEXT_JUSTIFY_MIDDLE , TEXT_JUSTIFY_LEFT )
            BlzFrameSetScale(BlacksmithFrame[player].reforge_cost_frame, scale)
        return new_frame
    end


    ---@param button_type number
    ---@param texture string
    ---@param size_x real
    ---@param size_y real
    ---@param relative_frame framehandle
    ---@param frame_point_from framepointtype
    ---@param frame_point_to framepointtype
    ---@param offset_x real
    ---@param offset_y real
    ---@param parent_frame framehandle
    local function NewButton(button_type, texture, size_x, size_y, relative_frame, frame_point_from, frame_point_to, offset_x, offset_y, parent_frame)
        local new_Frame = BlzCreateFrame('ScriptDialogButton', parent_frame, 0, 0)
        local new_FrameImage = BlzCreateFrameByType("BACKDROP", "ButtonIcon", new_Frame, "", 0)

        ButtonList[new_Frame] = {
            button_type = button_type,
            item = nil,
            button = new_Frame,
            image = new_FrameImage
        }

        FrameRegisterNoFocus(new_Frame)
        FrameRegisterClick(new_Frame, texture)

        BlzTriggerRegisterFrameEvent(ClickTrigger, new_Frame, FRAMEEVENT_CONTROL_CLICK)
        BlzTriggerRegisterFrameEvent(EnterTrigger, new_Frame, FRAMEEVENT_MOUSE_ENTER)
        BlzTriggerRegisterFrameEvent(LeaveTrigger, new_Frame, FRAMEEVENT_MOUSE_LEAVE)

        BlzFrameSetPoint(new_Frame, frame_point_from, relative_frame, frame_point_to, offset_x, offset_y)
        BlzFrameSetSize(new_Frame, size_x, size_y)
        BlzFrameSetTexture(new_FrameImage, texture, 0, true)
        BlzFrameSetAllPoints(new_FrameImage, new_Frame)

        return new_Frame
    end


    local function NewSpecialButton(text, size_x, size_y, relative_frame, frame_point_from, frame_point_to, offset_x, offset_y, parent_frame)
        local frame = BlzCreateFrame('ScriptDialogButton', parent_frame, 0, 0)
        local textframe = BlzGetFrameByName("ScriptDialogButtonText", 0)

            BlzFrameSetText(textframe, text)
            BlzFrameSetScale(textframe, 0.8)
            BlzFrameSetTextAlignment(textframe, TEXT_JUSTIFY_CENTER , TEXT_JUSTIFY_MIDDLE)

            BlzFrameSetPoint(frame, frame_point_from, relative_frame, frame_point_to, offset_x, offset_y)
            BlzFrameSetSize(frame, size_x, size_y)

            FrameRegisterNoFocus(frame)

            BlzTriggerRegisterFrameEvent(ClickTrigger, frame, FRAMEEVENT_CONTROL_CLICK)

            ButtonList[frame] = {
                button = frame,
                button_type = BUTTON_REFORGE
            }

        return frame
    end


    local function RemovePlayerItems(player)
        local button_data = GetButtonData(BlacksmithFrame[player].reforge_item_slot)

        if button_data.item then
            button_data.item = nil
        end

        button_data = GetButtonData(BlacksmithFrame[player].socket_item_slot)

        if button_data.item then
            button_data.item = nil
            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[1], false)
            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[2], false)
            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[3], false)
            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[4], false)
        end
    end


    function RemoveItemFromBlacksmith(player, item)
        local button = GetButtonData(BlacksmithFrame[player].reforge_item_slot)

            if button.item and button.item == item then
                button.item = nil
                UpdateBlacksmithWindow(player)
            end

        button = GetButtonData(BlacksmithFrame[player].socket_item_slot)

            if button.item and button.item == item then
                button.item = nil
                UpdateBlacksmithWindow(player)
            end

    end


    ---@param player number
    function UpdateBlacksmithWindow(player)
        if BlacksmithFrame[player].state then
            local button = GetButtonData(BlacksmithFrame[player].reforge_item_slot)
            local item_data

                if button.item then
                    item_data = GetItemData(button.item)
                    local cost = (Current_Wave - item_data.level) * REFORGE_COST_PER_LEVEL

                    if item_data.level < Current_Wave then
                        cost = (Current_Wave - item_data.level) * REFORGE_COST_PER_LEVEL + REFORGE_COST_PER_LEVEL
                    else
                        cost = REFORGE_COST_PER_LEVEL
                    end


                    if cost > 0 then BlzFrameSetText(BlacksmithFrame[player].reforge_cost_frame, "|c00FFFF00" ..I2S(cost) .. "|r") end
                    BlacksmithFrame[player].reforge_cost = cost
                else
                    BlacksmithFrame[player].reforge_cost = 0
                    BlzFrameSetTexture(button.image, "GUI\\inventory_slot.blp", 0, true)
                    BlzFrameSetText(BlacksmithFrame[player].reforge_cost_frame, "")
                end

                button = GetButtonData(BlacksmithFrame[player].socket_item_slot)

                if button.item then
                    item_data = GetItemData(button.item)

                        for i = 1, 4 do
                            if item_data.STONE_SLOTS[i] then
                                local socket_button = GetButtonData(BlacksmithFrame[player].socket_buttons[i])
                                BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[i], true)
                                BlzFrameSetTexture(socket_button.image, item_data.STONE_SLOTS[i].frame_texture, 0, true)
                                BlzFrameSetText(BlacksmithFrame[player].socket_button_tooltips[i].title, GetParameterName(item_data.STONE_SLOTS[i].point_bonus[item_data.TYPE].PARAM))
                                BlzFrameSetText(BlacksmithFrame[player].socket_button_tooltips[i].description, GetCorrectParamText(item_data.STONE_SLOTS[i].point_bonus[item_data.TYPE].PARAM, item_data.STONE_SLOTS[i].point_bonus[item_data.TYPE].VALUE, item_data.STONE_SLOTS[i].point_bonus[item_data.TYPE].METHOD))
                            else
                                BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[i], false)
                            end
                        end

                else
                    BlzFrameSetTexture(button.image, "GUI\\inventory_slot.blp", 0, true)
                end

        end
    end


    ---@param player number
    ---@param item item
    ---@param where number
    function GiveItemToBlacksmith(player, item, where)
        local button
        local item_data = GetItemData(item)

            if where == BLACKSMITH_REFORGE then
                button = GetButtonData(BlacksmithFrame[player].reforge_item_slot)
            elseif where == BLACKSMITH_RESOCKET then
                button = GetButtonData(BlacksmithFrame[player].socket_item_slot)
            end

            button.item = item
            BlzFrameSetTexture(button.image, item_data.frame_texture, 0, true)
            BlzFrameSetAlpha(button.image, 255)
            BlzFrameSetAlpha(button.button, 255)
            UpdateBlacksmithWindow(player)

    end


    ---@param player number
    function DrawBlacksmithFrames(player)
        local new_Frame
        local main_frame = BlzCreateFrame('EscMenuBackdrop', GAME_UI, 0, 0)

            BlacksmithFrame[player] = {}
            BlzFrameSetPoint(main_frame, FRAMEPOINT_TOPLEFT, GAME_UI, FRAMEPOINT_TOPLEFT, 0.01, -0.05)
            BlzFrameSetSize(main_frame, 0.3, 0.23)


            new_Frame = BlzCreateFrameByType('BACKDROP', "PORTRAIT", main_frame, "",0)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_TOPLEFT, main_frame, FRAMEPOINT_TOPLEFT, 0.02, -0.02)
            BlzFrameSetSize(new_Frame, 0.0435, 0.0435)
            BlacksmithFrame[player].portrait = new_Frame

            new_Frame = BlzCreateFrameByType("TEXT", "shop name", BlacksmithFrame[player].portrait, "", 0)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_LEFT, BlacksmithFrame[player].portrait, FRAMEPOINT_RIGHT, 0.011, 0.)
            BlzFrameSetTextAlignment(new_Frame, TEXT_JUSTIFY_MIDDLE, TEXT_JUSTIFY_LEFT)
            BlzFrameSetScale(new_Frame, 1.35)
            BlacksmithFrame[player].name = new_Frame


            new_Frame = BlzCreateFrame('EscMenuBackdrop', main_frame, 0, 0)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_BOTTOMLEFT, main_frame, FRAMEPOINT_BOTTOMLEFT, 0.015, 0.015)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_BOTTOMRIGHT, main_frame, FRAMEPOINT_BOTTOMRIGHT, -0.015, 0.015)
            BlzFrameSetSize(new_Frame, 0.1, 0.07)
            BlacksmithFrame[player].inner_socket_border = new_Frame


            new_Frame = BlzCreateFrame('EscMenuBackdrop', BlacksmithFrame[player].inner_socket_border, 0, 0)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_BOTTOMLEFT, BlacksmithFrame[player].inner_socket_border, FRAMEPOINT_TOPLEFT, 0., 0.0025)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_BOTTOMRIGHT, BlacksmithFrame[player].inner_socket_border, FRAMEPOINT_TOPRIGHT, 0., 0.0025)
            BlzFrameSetSize(new_Frame, 0.1, 0.07)
            BlacksmithFrame[player].inner_reforge_border = new_Frame


            new_Frame = BlzCreateFrame('EscMenuBackdrop', BlacksmithFrame[player].inner_reforge_border, 0, 0)
            BlacksmithFrame[player].reforge_item_slot = NewButton(BUTTON_FREE, "GUI\\inventory_slot.blp", 0.04, 0.04, BlacksmithFrame[player].inner_reforge_border, FRAMEPOINT_TOPLEFT, FRAMEPOINT_TOPLEFT, 0.015, -0.015, BlacksmithFrame[player].inner_reforge_border)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_BOTTOMLEFT, BlacksmithFrame[player].reforge_item_slot, FRAMEPOINT_BOTTOMLEFT, -0.015, -0.015)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_TOPRIGHT, BlacksmithFrame[player].reforge_item_slot, FRAMEPOINT_TOPRIGHT, 0.015, 0.015)

            new_Frame = BlzCreateFrame('EscMenuBackdrop', BlacksmithFrame[player].inner_socket_border, 0, 0)
            BlacksmithFrame[player].socket_item_slot = NewButton(BUTTON_RESOCKET, "GUI\\inventory_slot.blp", 0.04, 0.04, BlacksmithFrame[player].inner_socket_border, FRAMEPOINT_TOPLEFT, FRAMEPOINT_TOPLEFT, 0.015, -0.015, BlacksmithFrame[player].inner_socket_border)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_BOTTOMLEFT, BlacksmithFrame[player].socket_item_slot, FRAMEPOINT_BOTTOMLEFT, -0.015, -0.015)
            BlzFrameSetPoint(new_Frame, FRAMEPOINT_TOPRIGHT, BlacksmithFrame[player].socket_item_slot, FRAMEPOINT_TOPRIGHT, 0.015, 0.015)


            BlacksmithFrame[player].reforge_button = NewSpecialButton(LOCALE_LIST[my_locale].REFORGE_BUTTON_TEXT, 0.06, 0.04, BlacksmithFrame[player].reforge_item_slot, FRAMEPOINT_LEFT, FRAMEPOINT_RIGHT, 0.025, 0., BlacksmithFrame[player].inner_reforge_border)
            new_Frame = CreateTextBox(player, 0.085, 0.03, 1., BlacksmithFrame[player].reforge_button, FRAMEPOINT_LEFT, FRAMEPOINT_RIGHT, 0.0015, 0., main_frame)
            CreateTooltip(LOCALE_LIST[my_locale].UI_TOOLTIP_REFORGE_TITLE, LOCALE_LIST[my_locale].UI_TOOLTIP_REFORGE_DESC, BlacksmithFrame[player].reforge_button, 0.125, 0.06)
            BlacksmithFrame[player].masterframe = BlzCreateFrameByType("BACKDROP", "ButtonIcon", new_Frame, "", 0)


            BlacksmithFrame[player].socket_buttons = {}
            BlacksmithFrame[player].socket_buttons[1] = NewButton(BUTTON_SOCKET, "GUI\\inventory_slot.blp", 0.04, 0.04, BlacksmithFrame[player].socket_item_slot, FRAMEPOINT_LEFT, FRAMEPOINT_RIGHT, 0.0125, 0., BlacksmithFrame[player].socket_item_slot)
            BlacksmithFrame[player].socket_buttons[2] = NewButton(BUTTON_SOCKET, "GUI\\inventory_slot.blp", 0.04, 0.04, BlacksmithFrame[player].socket_buttons[1], FRAMEPOINT_LEFT, FRAMEPOINT_RIGHT, 0.0075, 0., BlacksmithFrame[player].socket_item_slot)
            BlacksmithFrame[player].socket_buttons[3] = NewButton(BUTTON_SOCKET, "GUI\\inventory_slot.blp", 0.04, 0.04, BlacksmithFrame[player].socket_buttons[2], FRAMEPOINT_LEFT, FRAMEPOINT_RIGHT, 0.0075, 0., BlacksmithFrame[player].socket_item_slot)
            BlacksmithFrame[player].socket_buttons[4] = NewButton(BUTTON_SOCKET, "GUI\\inventory_slot.blp", 0.04, 0.04, BlacksmithFrame[player].socket_buttons[3], FRAMEPOINT_LEFT, FRAMEPOINT_RIGHT, 0.0075, 0., BlacksmithFrame[player].socket_item_slot)


            BlacksmithFrame[player].socket_button_tooltips = {
                CreateTooltip("NAME", "DESC", BlacksmithFrame[player].socket_buttons[1], 0.125, 0.06),
                CreateTooltip("NAME", "DESC", BlacksmithFrame[player].socket_buttons[2], 0.125, 0.06),
                CreateTooltip("NAME", "DESC", BlacksmithFrame[player].socket_buttons[3], 0.125, 0.06),
                CreateTooltip("NAME", "DESC", BlacksmithFrame[player].socket_buttons[4], 0.125, 0.06)
            }

            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[1], false)
            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[2], false)
            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[3], false)
            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[4], false)


            --BlacksmithFrame[player].masterframe = BlzCreateFrameByType("BACKDROP", "ButtonIcon", BlacksmithFrame[player].slot[32], "", 0)

            BlacksmithFrame[player].tooltip = NewTooltip(BlacksmithFrame[player].masterframe)

            BlacksmithFrame[player].main_frame = main_frame
            BlzFrameSetVisible(BlacksmithFrame[player].main_frame, false)
            BlacksmithFrame[player].state = false

    end


    ---@param unit_owner unit
    ---@param texture string
    function CreateBlacksmith(unit_owner, texture)

        BlacksmithFrame = {}

        ClickTrigger = CreateTrigger()
        TriggerAddAction(ClickTrigger, function()
            local button = GetButtonData(BlzGetTriggerFrame())
            local player = GetPlayerId(GetTriggerPlayer()) + 1


                if button.item then
                    button.item = nil

                    BlzFrameSetTexture(button.image, "GUI\\inventory_slot.blp", 0, true)

                        if button.button_type == BUTTON_RESOCKET then
                            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[1], false)
                            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[2], false)
                            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[3], false)
                            BlzFrameSetVisible(BlacksmithFrame[player].socket_buttons[4], false)
                        elseif button.button_type == BUTTON_FREE then
                            BlzFrameSetText(BlacksmithFrame[player].reforge_cost_frame, "")
                        end

                elseif button.button_type == BUTTON_REFORGE and BlacksmithFrame[player].reforge_cost > 0 then
                    local reforge_button = GetButtonData(BlacksmithFrame[player].reforge_item_slot)
                    local gold = GetPlayerState(Player(player - 1), PLAYER_STATE_RESOURCE_GOLD)
                    --local cost = BlacksmithFrame[player].reforge_cost

                        if reforge_button.item then
                            if gold >= BlacksmithFrame[player].reforge_cost then
                                SetPlayerState(Player(player - 1), PLAYER_STATE_RESOURCE_GOLD, gold - BlacksmithFrame[player].reforge_cost)
                                PlayLocalSound("Buildings\\Human\\Blacksmith\\BlacksmithWhat1.wav", player-1, 115)
                                BlzFrameSetText(BlacksmithFrame[player].reforge_cost_frame, "|c00FFFF00" .. I2S(REFORGE_COST_PER_LEVEL) .. "|r")
                                BlacksmithFrame[player].reforge_cost = REFORGE_COST_PER_LEVEL

                                local soundpack = {
                                    "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerYes3.wav",
                                    "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerYes4.wav",
                                    "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerYes5.wav",
                                }

                                PlayLocalSound(soundpack[GetRandomInt(1, #soundpack)], player-1, 125)

                                if IsItemEquipped(PlayerHero[player], reforge_button.item) then
                                    EquipItem(PlayerHero[player], reforge_button.item, false)
                                    GenerateItemLevel(reforge_button.item, Current_Wave)
                                    EquipItem(PlayerHero[player], reforge_button.item, true)
                                else
                                    GenerateItemLevel(reforge_button.item, Current_Wave)
                                end

                            else
                                Feedback_NoGold(player - 1)
                            end

                        else
                            Feedback_CantUse(player - 1)
                        end

                elseif button.button_type == BUTTON_SOCKET then
                    local resocket_button = GetButtonData(BlacksmithFrame[player].socket_item_slot)

                        if resocket_button.item then
                            local item_data = GetItemData(resocket_button.item)

                                for i = 1, 4 do
                                    local socket_button = GetButtonData(BlacksmithFrame[player].socket_buttons[i])
                                        if socket_button.button == button.button then
                                            local soundpack = {
                                                "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerYes1.wav",
                                                "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerYes2.wav",
                                                "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerWhat2.wav",
                                            }

                                            PlayLocalSound(soundpack[GetRandomInt(1, #soundpack)], player-1, 125)

                                            PlayLocalSound("Sound\\UI\\reforge_".. GetRandomInt(1,3) ..".wav", player-1, 115)

                                            local equipped = IsItemEquipped(PlayerHero[player], resocket_button.item)

                                            if equipped then EquipItem(PlayerHero[player], resocket_button.item, false) end

                                            item_data.STONE_SLOTS[i] = nil

                                                for i2 = 2, 4 do
                                                    --print("slot " .. i)
                                                    if item_data.STONE_SLOTS[i2] then
                                                        --print("get slot " .. i)
                                                        for second_i = 1, 4 do
                                                            if not item_data.STONE_SLOTS[second_i] then
                                                                item_data.STONE_SLOTS[second_i] = MergeTables({}, item_data.STONE_SLOTS[i2])
                                                                item_data.STONE_SLOTS[i2] = nil
                                                                --print("moved to " .. second_i)
                                                                break
                                                            end
                                                        end
                                                    end
                                                end

                                            if equipped then EquipItem(PlayerHero[player], resocket_button.item, true) end
                                            UpdateBlacksmithWindow(player)
                                            break
                                        end
                                end

                        end

                end

        end)

        LeaveTrigger = CreateTrigger()
        TriggerAddAction(LeaveTrigger, function()
            local button = GetButtonData(BlzGetTriggerFrame())
            local player = GetPlayerId(GetTriggerPlayer()) + 1

                if button.item then
                    RemoveTooltip(player)
                end

        end)

        EnterTrigger = CreateTrigger()
        TriggerAddAction(EnterTrigger, function()
            local button = GetButtonData(BlzGetTriggerFrame())
            local player = GetPlayerId(GetTriggerPlayer()) + 1

            if button.item then
                ShowItemTooltip(button.item, BlacksmithFrame[player].tooltip, button, player, FRAMEPOINT_RIGHT)
            else
                RemoveTooltip(player)
            end

        end)

        local trg = CreateTrigger()
        local soundpack = {
            open = {
                "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerWhat1.wav",
                "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerWhat3.wav",
                "Units\\Critters\\BloodElfPeasant\\BloodElfEngineerWhat4.wav",
            }
        }


            local FirstTime_Data = {
                [1] = { first_time = true },
                [2] = { first_time = true },
                [3] = { first_time = true },
                [4] = { first_time = true },
                [5] = { first_time = true },
                [6] = { first_time = true }
            }

            for i = 1, 6 do
                if GetLocalPlayer() == Player(i-1) then
                    FirstTime_Data[i].effect = AddSpecialEffectTarget("Quest\\ExcMark_Green_FlightPath.mdx", unit_owner, "overhead")
                else
                    FirstTime_Data[i].effect = AddSpecialEffectTarget("", unit_owner, "overhead")
                end
            end


            for i = 1, 6 do
                DrawBlacksmithFrames(i)
                BlzFrameSetTexture(BlacksmithFrame[i].portrait, texture, 0, true)
                BlzFrameSetText(BlacksmithFrame[i].name, GetUnitName(unit_owner))
            end

            TriggerRegisterUnitInRangeSimple(trg, 300., unit_owner)
            TriggerAddAction(trg, function()
                local id = GetPlayerId(GetOwningPlayer(GetTriggerUnit()))
                local player = id + 1

                    if id <= 5 then
                        local hero = GetTriggerUnit()

                        if GetLocalPlayer() == Player(id) then BlzFrameSetVisible(BlacksmithFrame[player].main_frame, true) end
                        BlacksmithFrame[player].state = true
                        UpdateBlacksmithWindow(player)
                        if soundpack then
                            PlayLocalSound(soundpack.open[GetRandomInt(1, #soundpack.open)], id, 125)
                        end

                            local timer = CreateTimer()
                            TimerStart(timer, 0.1, true, function()
                                if not IsUnitInRange(hero, unit_owner, 299.) or IsUnitHidden(unit_owner) then
                                    --DestroySlider(player)
                                    RemovePlayerItems(player)
                                    DestroyContextMenu(player)
                                    RemoveTooltip(player)
                                    --ShopInFocus[player] = nil
                                    BlacksmithFrame[player].state = false
                                    if GetLocalPlayer() == Player(id) then BlzFrameSetVisible(BlacksmithFrame[player].main_frame, false) end
                                    DestroyTimer(GetExpiredTimer())
                                    if soundpack then
                                        PlayLocalSound(soundpack.close[GetRandomInt(1, #soundpack.open)], id, 125)
                                    end
                                end
                            end)

                        if FirstTime_Data[player].first_time then
                            ShowQuestHintForPlayer(LOCALE_LIST[my_locale].HINT_BLACKSMITH_1, player-1)
                            DestroyEffect(FirstTime_Data[player].effect)
                            AddSpecialEffectTarget("Marker\\BlacksmithIcon.mdx", unit_owner, "overhead")
                            FirstTime_Data[player].first_time = false
                        end

                    end
            end)

    end


end